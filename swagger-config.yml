openapi: 3.0.0
info:
  title: Tasks API
  description: A simple Tasks API
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /tasks:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
         application/json:
          schema:
           example:
             title: string
             description: string
             status: string
             importance: string
      responses:
        '201':
          description: Task successfully created
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/Tasks'
        '400':
          description: Validation error
    get:
      summary: Returns the list of all tasks (filtered/paginated)
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: string
          description: The numbers of items to return
      - in: query
        name: skip
        required: false
        schema:
          type: string
          description: The number of items to skip before starting to collect the result
      - in: query
        name: status
        required: false
        schema:
          type: string
          description: Filter items by status and return filtered result
      - in: query
        name: importance
        required: false
        schema:
          type: string
          description: Filter items by importance and return filtered result
      responses:
        '200':
          description: The list of the tasks
          content:
            application/json:
             schema:
               example:
                 tasks: []
                 total: number
                 limit: number
                 skip: number
  /tasks/{id}:
    get:
      summary: Get task by id
      parameters:
      - in: path
        name: id
        required: true
        schema:
         type: string
         description: The task id
      responses:
        '200':
          description: The task description by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
        '404':
          description: Task not found
        '400':
          description: Invalid task id
    delete:
      summary: Delete task by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The task id
      responses:
        '204':
          description: No content
        '404':
          description: Task not found
        '400':
          description: Invalid task id
    put:
      summary: Replace task by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The task id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                title: string
                description: string
                status: string
                importance: string
      responses:
        '200':
          description: The task was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
        '400':
          description: Validation error
        '404':
          description: Task not found
    patch:
      summary: Update task by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The task id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                title: string
                description: string
                status: string
                importance: string
      responses:
        '200':
          description: The task was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
        '400':
          description: Validation error
        '404':
          description: Task not found
components:
  schemas:
    Tasks:
      type: object
      discriminator:
        propertyName: taskType
      properties:
        id:
          type: string
          description: The auto-generated mongo id of the task
        title:
          type: string
          description: The task title
        description:
          type: string
          description: The task description
        status:
          type: string
          enum: [ NOT_STARTED, IN_PROGRESS, COMPLETED ]
          default: NOT_STARTED
          description: The task status
        importance:
          type: string
          enum: [ LOW, MEDIUM, HIGH ]
          default: LOW
          description: The task importance
        createdAt:
          type: Date
          description: The auto-generated creation date
        updatedAt:
          type: Date
          description: The auto-generated date when task is updated
        completedAt:
          type: Date
          description: Task completion date
          default: null
      required:
        - id
        - title
        - description
        - status
        - importance
        - createdAt
        - updatedAt
      example:
        id: 615dd91db28fc6609acdaf74
        title: NODE JS AND TYPESCRIPT
        description: NODE JS learning
        status: NOT_STARTED
        importance: LOW
        createdAt: 2021-10-06T17:13:01.495Z
        updatedAt: 2021-10-06T17:13:01.495Z
        completedAt: null





